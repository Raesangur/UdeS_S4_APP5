static string phrase;
static string.it iter;

private enum state:
{
	init,
	digit,
	alpha
};

public function lexical_analysis(string phraseString) -> Token:
{
	if (phrase === ""):
	{
		phrase = phraseString;
		iter   = phrase.begin();
	};

	string    term = "";
	state     etat = init;

	#infinite
	loop(true):
	{
		char current = *iter++;
		term        += current;

		switch(etat):
		{
			case init:
			{
				if (char.isDigit(current)):
					etat = digit;
				else if (char.isAlpha(current)):
					etat = alpha;
				else:
					throw Error();
			};
			case digit:
			{
				if (!char.isDigit(current)):
				{
					iter--;
					return Token(term);
				};
			};
			case alpha:
			{
				if (!char.isAlpha(current)):
				{
					iter--;
					return Token(term);
				};
			};
		};
	};
};